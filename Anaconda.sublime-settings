/*
    Anaconda default settings
*/
{

    /*
        Default python interpreter.

        This can (an should) be overriden byb project settings
    */
    "python_interpreter": "python",

    /*
        Set those aas true if you don't want Sublime Text regular completions
    */
    "suppress_word_completions": false,
    "suppress_explicit_completions": false,

    /*
        If complete_parameters is true, anaconda will add function and class
        parameters to its completions.

        If complete_all_parameters is true, it will add all the possible
        parameters, if it's false, it will add only required parameters
    */
    "complete_parameters": false,
    "complete_all_parameters": false,

    /*
        The following set of options controls the pep8 autoformating behaviour

        The full list of errors that can be fixed are:

            E101 - Reindent all lines.
            E111 - Reindent all lines.
            E121 - Fix indentation to be a multiple of four.
            E122 - Add absent indentation for hanging indentation.
            E123 - Align closing bracket to match opening bracket.
            E124 - Align closing bracket to match visual indentation.
            E125 - Indent to distinguish line from next logical line.
            E126 - Fix over-indented hanging indentation.
            E127 - Fix visual indentation.
            E128 - Fix visual indentation.
            E129 - Indent to distinguish line from next logical line.
            E201 - Remove extraneous whitespace.
            E202 - Remove extraneous whitespace.
            E203 - Remove extraneous whitespace.
            E211 - Remove extraneous whitespace.
            E221 - Fix extraneous whitespace around keywords.
            E222 - Fix extraneous whitespace around keywords.
            E223 - Fix extraneous whitespace around keywords.
            E224 - Remove extraneous whitespace around operator.
            E225 - Fix missing whitespace around operator.
            E226 - Fix missing whitespace around operator.
            E227 - Fix missing whitespace around operator.
            E228 - Fix missing whitespace around operator.
            E231 - Add missing whitespace.
            E241 - Fix extraneous whitespace around keywords.
            E242 - Remove extraneous whitespace around operator.
            E251 - Remove whitespace around parameter '=' sign.
            E261 - Fix spacing after comment hash.
            E262 - Fix spacing after comment hash.
            E271 - Fix extraneous whitespace around keywords.
            E272 - Fix extraneous whitespace around keywords.
            E273 - Fix extraneous whitespace around keywords.
            E274 - Fix extraneous whitespace around keywords.
            E301 - Add missing blank line.
            E302 - Add missing 2 blank lines.
            E303 - Remove extra blank lines.
            E304 - Remove blank line following function decorator.
            E401 - Put imports on separate lines.
            E501 - Try to make lines fit within --max-line-length characters.
            E502 - Remove extraneous escape of newline.
            E701 - Put colon-separated compound statement on separate lines.
            E702 - Put semicolon-separated compound statement on separate lines.
            E703 - Put semicolon-separated compound statement on separate lines.
            E711 - Fix comparison with None.
            E712 - Fix comparison with boolean.
            W191 - Reindent all lines.
            W291 - Remove trailing whitespace.
            W293 - Remove trailing whitespace on blank line.
            W391 - Remove trailing blank lines.
            E26  - Format block comments.
            W6   - Fix various deprecated code (via lib2to3).
            W602 - Fix deprecated form of raising exception.
    */

    /*
        Autoformat files on save

        This option is disabled by default, AutoPEP8 is really slow and it get
        the file buffer read only while its working in the background.

        Use this at your risk
    */
    "auto_formatting": false,

    /*
        Enable unsafe changes:
            https://github.com/hhatto/autopep8#more-advanced-usage

        Set it as 0 if you are unsure here
    */
    "aggressive": 0,

    /*
        Do not fix the errors listed here:
    */
    "autoformat_ignore":
    [
    ],

    /*
        Fix only the errors listed here:
    */
    "autoformat_select":
    [
    ],

    /*
        Set is a false to disable Anaconda Linting totally
    */
    "anaconda_linting": true,

    /*
        Sets the linting behaviour for anaconda:

        "always" - Linting works always even while you are writting (in the background)
        "load-save" - Linting works in file load and save only
        "save-only" - Linting works in file save only
    */
    "anaconda_linting_behaviour": "always",

    /*
        The minimum delay in seconds (fractional seconds are okay) before
        a linter is run when the "sublimelinter" setting is true. This allows
        you to have background linting active, but defer the actual linting
        until you are idle. When this value is greater than the built in linting delay,
        errors are erased when the file is modified, since the assumption is
        you don't want to see errors while you type.
    */
    "anaconda_linter_delay": 0.5,

    // If true, anaconda draws gutter amrks on line with errors
    "anaconda_gutter_marks": false,

    /*
        If anaconda_gutter_marks is true, this determines what theme is used.
        Theme 'basic' only adds dots and circles to gutter.

        Other available themes are 'alpha', 'bright', 'dark', 'hard' and
        'simple'. To see icons that will be used for each theme check
        gutter_icon_themes folder in Anaconda package.
    */
    "anaconda_gutter_theme": "basic",

    /*
        Use PyLint instead of PyFlakes and PEP-8

        **** WARNING ****

        - If you set this value as true, PyFlakes and pep8 will not bet used
        - PyLint does *NOT* support lint buffers that are not already saved in
          the file system

        **** WARNING ****
    */
    "use_pylint": false,

    // Set this to false to turn pep8 checking off completely
    "pep8": true,

    /*
        A list of pep8 error numbers to ignore. By default "line too long" errors are ignored.
        The list of error codes is in this file: https://github.com/jcrocholl/pep8/blob/master/pep8.py.
        Search for "Ennn:", where nnn is a 3-digit number.
    */
    "pep8_ignore":
    [
    ],

    // Maximum line length for pep8
    "pep8_max_line_length": 79,

    /*
        You can ignore some of the "undefined name xxx"
        errors (comes in handy if you work with post-processors, globals/builtins available only at runtime, etc.).
        You can control what names will be ignored with the user setting "pyflakes_ignore".

        Example:

        "pyflakes_ignore":
            [
                "some_custom_builtin_o_mine",
                "A_GLOBAL_CONSTANT"
            ],
    */
    "pyflakes_ignore":
    [
    ],

    /*
        You can ignore specific PyLint error codes using this configuration.
        We strongly suggest that you better configure your pylintrc file to
        determine which type of error is important to you
    */
    "pylint_ignore":
    [
        // "0201"
    ],

    /*
        Ordinarily pyflakes will issue a warning when 'from foo import *' is used,
        but it is ignored since the warning is not that helpful. If you want to see this warning,
        set this option to false.
    */
    "pyflakes_ignore_import_*": true,

    /*
        Debug and development options

        Use those options only for debugging and devleopment purposes, them can
        and will slowdown your Sublime Text

        anconda_debug can be set as: false or profiler

        If this is set as profiler, Aanconda will run a profiler on autocompelte
        and print it results in the Sublime Text console.

        NOTE: cProfile can't be imported in all the platforms, at least no in
        Linux, this is an already reported bug:

            http://www.sublimetext.com/forum/viewtopic.php?f=3&t=13698
            https://github.com/SublimeText/Issues/issues/127

    */
    "anaconda_debug": false
}
